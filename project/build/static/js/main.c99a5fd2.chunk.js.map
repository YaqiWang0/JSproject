{"version":3,"sources":["singleRecipe.jsx","recipeList.jsx","recipe.jsx","recipeDetail.jsx","addRecipe.jsx","status.jsx","service.js","App.jsx","serviceWorker.js","index.js"],"names":["SingleRecipe","_ref","recipe","selectRecipe","react_default","a","createElement","className","href","data-title","onClick","e","title","RecipeList","recipes","Object","values","map","singleRecipe","Recipe","tryAddRecipe","recipeList","RecipeDetail","targetRecipe","display","style","ingredientsList","instructions","AddRecipe","recipeToAdd","onChangeTitle","onChangeIngredients","onChangeInstructions","ifAddDisabled","value","onChange","disabled","Status","status","getRecipes","fetch","catch","err","Promise","reject","error","message","then","response","ok","json","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errors","network-error","need-title","title-exists","need-ingredient","need-instructions","default","ifAddRecipeDisplay","ifRecipeDetailDisplay","ifTitleDisabled","ifIngredientDisabled","ifInstructionsDisabled","titleToAdd","ingredientsListToAdd","instructionsToAdd","statusField","setState","bind","assertThisInitialized","addRecipe","timer","setInterval","_this2","preventDefault","disable","target","_this3","newRecipes","method","headers","Headers","content-type","body","JSON","stringify","statusText","src_recipe","recipeDetail","src_addRecipe","src_status","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c99a5fd2.chunk.js","sourcesContent":["import React from 'react';\nimport './stylesheet.css';\n\nconst SingleRecipe=({recipe,selectRecipe})=>{\n    return(\n        <li>\n            <div className=\"recipe\">\n                <a href=\"http://localhost:4000/detailRecipt?title={recipe.title}\"><span className=\"recipe-title\"  data-title=\"{recipe.title}\" onClick={(e)=>selectRecipe(e,recipe)}>\n          {recipe.title}</span></a>\n            </div>\n        </li>\n    )\n};\n\nexport default SingleRecipe;","import React from 'react';\nimport './stylesheet.css';\nimport SingleRecipe from \"./singleRecipe\";\n\nconst RecipeList=({recipes,selectRecipe})=>{\n    return(\n        <ul className=\"recipe-list\">\n           {\n               Object.values(recipes).map(recipe=>{\n                   return <SingleRecipe recipe={recipe} selectRecipe={selectRecipe}/>\n               })\n           }\n        </ul>\n    )\n};\n\nexport default RecipeList;","import React from 'react';\nimport './stylesheet.css';\nimport RecipeList from './recipeList';\n\nconst Recipe=({recipes,selectRecipe,tryAddRecipe})=>{\n    return(\n        <div className='recipes'>\n            <RecipeList recipes={recipes} selectRecipe={selectRecipe}/>\n\n            <a href=\"http://localhost:4000/addForm\">\n                <button className=\"open-add-screen\" onClick={(e)=>tryAddRecipe(e)}>New Recipe</button>\n            </a>\n        </div>\n    )\n};\n\nexport default Recipe;","import React from 'react';\nimport './stylesheet.css';\n\nconst RecipeDetail=({targetRecipe,display})=>{\n    return(\n        <div className=\"recipe-detail\" style={{display:display}}>\n            <div className=\"recipe-items\"><p className=\"recipe-detail-items-title\">Title: </p>{targetRecipe.title}</div>\n            <div className=\"recipe-items\"><p className=\"recipe-detail-items-title\">Ingredients List: </p>{targetRecipe.ingredientsList}</div>\n            <div className=\"recipe-items\"><p className=\"recipe-detail-items-title\">Instruction: </p>{targetRecipe.instructions}</div>\n        </div>\n    )\n};\n\nexport default RecipeDetail;","import React from 'react';\nimport './stylesheet.css';\n\nconst AddRecipe=({display,recipeToAdd,onChangeTitle,onChangeIngredients,onChangeInstructions,ifAddDisabled,AddRecipe})=>{\n    return(\n        <div className=\"add-frame\" style={{display:display}}>\n            <div className=\"query-item\">\n                <div className=\"query-title\">Title</div>\n                <input className=\"title\" value={recipeToAdd.title} onChange={(e)=>onChangeTitle(e)}/></div>\n            <div className=\"query-item\">\n                <div className=\"query-title\">Ingredients</div>\n                <input className=\"ingredients\" value={recipeToAdd.ingredientsList} onChange={(e)=>onChangeIngredients(e)}/></div>\n            <div className=\"query-item\">\n                <div className=\"query-title\">Instructions</div>\n                <input className=\"instructions\" value={recipeToAdd.instructions} onChange={(e)=>onChangeInstructions(e)}/></div>\n            <button className=\"to-add\" disabled={ifAddDisabled} onClick={(e)=>AddRecipe(e)}>Add</button>\n        </div>\n    )\n};\n\nexport default AddRecipe;","import React from 'react';\nimport './stylesheet.css';\n\nconst Status=({status})=>{\n    return(\n        <div className=\"add-status\">{status}</div>\n    )\n};\n\nexport default Status;","export const getRecipes=()=> {\n   return  fetch('/recipeList/').catch(err=> {\n            return Promise.reject({error: 'network-error', message: 'network issue'});\n        }\n    ).then(response=>{\n        if(response.ok){\n            return response.json();\n        }\n        return response.json().then(err=>Promise.reject(err));\n    })\n};\n\nexport const addNewRecipe=(recipe)=>{\n    return  fetch('/addRecipts/', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json'\n        }),\n        body: JSON.stringify(recipe)\n\n    }).catch( err => Promise.reject({ error: 'service-error', err }) )\n\n};","import React from 'react';\nimport './stylesheet.css';\nimport Recipe from \"./recipe\";\nimport RecipeDetail from \"./recipeDetail\";\nimport AddRecipe from \"./addRecipe\";\nimport Status from \"./status\";\nimport {getRecipes,addNewRecipe} from \"./service\";\nclass App extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            errors : {\n                'network-error': 'Error talking to network',\n                'need-title': 'Title is required',\n                'title-exists': 'Recipe already exists',\n                'need-ingredient':'Ingredients is required',\n                'need-instructions':'Instructions is required',\n                default: 'Unknown error'\n            },\n            ifAddRecipeDisplay:'none',\n            ifRecipeDetailDisplay:'none',\n\n            targetRecipe:{\n                title:'q',\n                ingredientsList:'q',\n                instructions:'q'\n            },\n            ifTitleDisabled:true,\n            ifIngredientDisabled:true,\n            ifInstructionsDisabled:true,\n            recipes:{\n\n            },\n\n            titleToAdd:'',\n            ingredientsListToAdd:'',\n            instructionsToAdd:'',\n            statusField:'',\n\n\n        };\n        getRecipes().then(recipes=>{\n            this.setState({\n                recipes:recipes,\n            })\n        }).catch(err=>{\n                this.setState({\n                    statusField:err.message||this.state.errors.default,\n                }\n                );\n        });\n\n         this.selectRecipe=this.selectRecipe.bind(this);\n         this.tryAddRecipe=this.tryAddRecipe.bind(this);\n        this.onChangeTitle=this.onChangeTitle.bind(this);\n        this.onChangeIngredients=this.onChangeIngredients.bind(this);\n         this.onChangeInstructions=this.onChangeInstructions.bind(this);\n        this.addRecipe=this.addRecipe.bind(this)\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(function () {\n\n            getRecipes().then(recipes=>{\n                let status=this.state.statusField;\n                if(this.state.statusField==='network issue')\n                    status='';\n                this.setState({\n                    recipes:recipes,\n                    statusField:status\n                })\n            }).catch(err=>{\n                this.setState({\n                        statusField:err.message||this.state.errors.default,\n                    }\n                );\n            });\n\n        }.bind(this), 5000);\n    }\n\n    selectRecipe(e,recipe){\n        e.preventDefault();\n        this.setState(\n            {\n                targetRecipe:recipe,\n                ifRecipeDetailDisplay:'flex',\n                statusField:'',\n            }\n        )\n    }\n\n    tryAddRecipe(e){\n        e.preventDefault();\n        this.setState(\n            {\n                ifAddRecipeDisplay:'flex',\n            }\n        )\n    }\n\n    onChangeTitle(e){\n            let disable=e.target.value==='';\n            this.setState({\n                titleToAdd:e.target.value,\n                statusField:'',\n                ifTitleDisabled:disable\n            })\n    }\n\n    onChangeIngredients(e){\n        let disable=e.target.value==='';\n        this.setState({\n            ingredientsListToAdd:e.target.value,\n            statusField:'',\n            ifIngredientDisabled:disable\n        })\n    }\n\n    onChangeInstructions(e){\n        let disable=e.target.value==='';\n        this.setState({\n            instructionsToAdd:e.target.value,\n            statusField:'',\n            ifInstructionsDisabled:disable\n        })\n    }\n\n    addRecipe(e){\n        e.preventDefault();\n        const newRecipes=this.state.recipes;\n        addNewRecipe({title:this.state.titleToAdd,ingredientsList: this.state.ingredientsListToAdd,instructions: this.state.instructionsToAdd}).then(response=>{\n            if(response.ok){\n                newRecipes[this.state.titleToAdd] = {title:this.state.titleToAdd,ingredientsList: this.state.ingredientsListToAdd,instructions: this.state.instructionsToAdd};\n                this.setState({\n                    recipes:newRecipes,\n                    titleToAdd:'',\n                    ingredientsListToAdd:'',\n                    instructionsToAdd:'',\n                    ifTitleDisabled:true,\n                    ifIngredientDisabled:true,\n                    ifInstructionsDisabled:true,\n                    ifAddRecipeDisplay:'none'\n\n                });\n\n                return;\n            }\n            return Promise.reject({ error: 'service-complaint', err: response.statusText });\n        }).catch(\n            err=>{\n                this.setState({\n                    statusField:err.error||this.state.errors.default,\n                });\n            }\n        );\n\n    }\n    render() {\n        return (\n\n      <div className=\"frame\">\n                <h1 className=\"whole-title\">Recipes Website</h1>\n                <div className='recipe-frame'>\n                    <Recipe recipes={this.state.recipes} selectRecipe={this.selectRecipe} tryAddRecipe={this.tryAddRecipe}/>\n                    <RecipeDetail display={this.state.ifRecipeDetailDisplay} targetRecipe={this.state.targetRecipe} />\n                </div>\n                <AddRecipe display={this.state.ifAddRecipeDisplay} recipeToAdd={{title:this.state.titleToAdd,ingredientsList: this.state.ingredientsListToAdd,instructions: this.state.instructionsToAdd}} onChangeTitle={this.onChangeTitle} onChangeIngredients={this.onChangeIngredients} onChangeInstructions={this.onChangeInstructions} ifAddDisabled={this.state.ifIngredientDisabled||this.state.ifInstructionsDisabled||this.state.ifTitleDisabled} AddRecipe={this.addRecipe}/>\n                <Status status={this.state.statusField}/>\n           </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}